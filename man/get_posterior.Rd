% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bayes.R
\name{get_posterior}
\alias{get_posterior}
\alias{get_prevalence}
\alias{get_ICC}
\title{Estimate prevalence and intra-cluster correlation from raw counts}
\usage{
get_prevalence(
  n,
  N,
  alpha = 0.05,
  prev_thresh = 0.05,
  prior_prev_shape1 = 1,
  prior_prev_shape2 = 1,
  prior_ICC_shape1 = 1,
  prior_ICC_shape2 = 3,
  return_type = list(mean_on = FALSE, median_on = TRUE, CrI_on = TRUE, thresh_on = TRUE,
    full_on = FALSE),
  CrI_type = "HDI",
  n_intervals = 20,
  debug_on = FALSE,
  use_cpp = TRUE
)

get_ICC(
  n,
  N,
  alpha = 0.05,
  prior_prev_shape1 = 1,
  prior_prev_shape2 = 1,
  prior_ICC_shape1 = 1,
  prior_ICC_shape2 = 1,
  return_type = list(mean_on = FALSE, median_on = TRUE, CrI_on = TRUE, full_on = FALSE),
  CrI_type = "HDI",
  n_intervals = 20,
  debug_on = FALSE,
  use_cpp = TRUE
)
}
\arguments{
\item{n, N}{the numerator (\code{n}) and denominator (\code{N}) per cluster
(vectors).}

\item{alpha}{the significance level of the credible interval - for example,
use \code{alpha = 0.05} for a 95\% interval. See also \code{CrI_type}
argument for how this is calculated.}

\item{prev_thresh}{return the probability that the prevalence is above this
threshold. Can be a vector, in which case the return object contains one
value for each input.}

\item{prior_prev_shape1, prior_prev_shape2, prior_ICC_shape1, prior_ICC_shape2}{parameters that dictate the shape of the Beta priors on prevalence and the
ICC. Increasing the first shape parameter (e.g. \code{prior_prev_shape1})
pushes the distribution towards 1, increasing the second shape parameter
(e.g. \code{prior_prev_shape2}) pushes the distribution towards 0.
Increasing both shape parameters squeezes the distribution towards the
centre and therefore makes it narrower.}

\item{return_type}{a list object specifying which outputs to produce (only a
subset of outputs is active by default to reduce computation time and to
simplify things for the basic user). The following options are available:
\itemize{
  \item \code{mean_on}: if \code{TRUE} then return the posterior mean.
  \item \code{median_on}: if \code{TRUE} then return the posterior median.
  \item \code{CrI_on}: if \code{TRUE} then return the posterior credible
  interval at significance level \code{alpha}. See \code{CrI_type} argument
  for how this is calculated.
  \item \code{thresh_on}: if \code{TRUE} then return the posterior
  probability of being above the threshold specified by \code{prev_thresh}.
  \item \code{full_on}: if \code{TRUE} then return the full posterior
  distribution (as approximated using the adaptive quadrature approach) in
  0.1\% intervals from 0\% to 100\%.
}}

\item{CrI_type}{which method to use when computing credible intervals, with
options "ETI" (equal-tailed interval) and "HDI" (high-density interval).
The ETI searches a distance \code{alpha/2} from either side of the [0,1]
interval. The HDI method returns the narrowest interval that subtends a
proportion \code{1-alpha} of the distribution. The HDI method is used by
default.}

\item{n_intervals}{the number of intervals used in the adaptive quadrature
method. Increasing this value gives a more accurate representation of the
true posterior, but comes at the cost of reduced speed.}

\item{debug_on}{for use in debugging. If \code{TRUE} and if \code{use_cpp =
FALSE} then produces a plot of the posterior distribution evaluated by
brute force (black) overlaid with the adaptive quadrature approximation
(blue) for direct comparison. If \code{use_cpp = TRUE} then only the
approximation is plotted. If the approximate distribution does not agree
closely with the brute force solution then consider increasing the value of
\code{n_intervals}. Note that producing this plot can be very slow, and so
this option should be turned off when not needed.}

\item{use_cpp}{if \code{TRUE} then use an Rcpp implementation of the adaptive
quadrature approach that is much faster and therefore useful when running
the function a large number of times.}
}
\description{
Takes raw counts of the number of positive samples per cluster
  (numerator) and the number of tested samples per cluster (denominator) and
  returns posterior estimates of the prevalence and the intra-cluster
  correlation coefficient (ICC).
}
\details{
There are two unknown quantities in the DRpower model: the
  prevalence and the ICC. Thes following functions integrate over a prior on
  one quantity to give the marginal posterior distribution of the other.
  Possible outputs include the posterior mean, median, credible interval
  (CrI), probability of being above a threshold, and the full posterior
  distribution. For speed, distributions are approximated using an adaptive
  quadrature approach, in which the full distribution is split into intervals
  of differing width and each intervals is approximated using Simpson's rule.
  The number of intervals used in quadrature can be increased for more
  accurate results, at the cost of slower speed.
}
